/**
 * Check if we should use committee voting and get member sys_ids
 */
shouldUseCommittee: function(type) {
    var result = {
        use_committee: false,
        member_count: 0,
        approval_count_needed: 0,
        member_sys_ids: []  // Added this
    };

    var table = (type === 'credit') ?
        'x_banun_bunow_si_0_crmc_delegated_authority' :
        'x_banun_bunow_si_0_ormc_delegated_authority';

    // Get active members
    var gr = new GlideRecord(table);
    gr.addQuery('active', true);
    gr.query();

    while (gr.next()) {
        result.member_sys_ids.push(gr.getValue('user'));
    }
    
    result.member_count = result.member_sys_ids.length;

    if (result.member_count >= 3) {
        result.use_committee = true;
        result.approval_count_needed = Math.ceil(result.member_count / 2);
    }

    return result;
},



Add Flow Variable
Add this to your flow variables:

committee_member_sys_ids (String) - We'll store as comma-separated string

Updated Flow Script (Step 5.10)
javascriptvar helper = new x_banun_bunow_si_0.SignatureHelper();
var result = helper.shouldUseCommittee('credit');

// Store all the committee info
fd_data.flow_var.approval_count_needed = result.approval_count_needed;
fd_data.flow_var.committee_member_sys_ids = result.member_sys_ids.join(',');  // Store as comma-separated

// Log to work notes
if (result.use_committee) {
    var childGr = new GlideRecord('x_banun_bunow_si_0_credit_authority_limits');
    if (childGr.get(fd_data.subflow_inputs.credit_record.sys_id)) {
        childGr.work_notes = 'Committee has ' + result.member_count + ' members. Need ' + 
                            result.approval_count_needed + ' approvals for majority.';
        childGr.update();
    }
}

return result.use_committee;
Using the Member Sys IDs in Ask for Approval (Step 5.12)
When you create the "Ask for Approval" action for committee voting:

Action Type: Ask for Approval
Record: Input â†’ credit_record
Approval Type: You'll need to handle majority voting
Users: Use a script to convert the string back to user references:

javascript// In the "Users" field of Ask for Approval, use script:
(function() {
    var memberIds = fd_data.flow_var.committee_member_sys_ids.split(',');
    var users = [];
    
    for (var i = 0; i < memberIds.length; i++) {
        if (memberIds[i]) {
            users.push(memberIds[i]);
        }
    }
    
    return users;
})();
Alternative: Return GlideRecord List
If ServiceNow Flow Designer supports it in your version, you could return the users directly:
javascript/**
 * Check if we should use committee voting and get members
 */
shouldUseCommittee: function(type) {
    var result = {
        use_committee: false,
        member_count: 0,
        approval_count_needed: 0,
        member_sys_ids: [],
        members: []  // Array of user references
    };

    var table = (type === 'credit') ?
        'x_banun_bunow_si_0_crmc_delegated_authority' :
        'x_banun_bunow_si_0_ormc_delegated_authority';

    // Get active members
    var gr = new GlideRecord(table);
    gr.addQuery('active', true);
    gr.query();

    while (gr.next()) {
        var userSysId = gr.getValue('user');
        result.member_sys_ids.push(userSysId);
        
        // Create user reference object
        var userRef = {
            sys_id: userSysId,
            table: 'sys_user'
        };
        result.members.push(userRef);
    }
    
    result.member_count = result.member_sys_ids.length;

    if (result.member_count >= 3) {
        result.use_committee = true;
        result.approval_count_needed = Math.ceil(result.member_count / 2);
    }

    return result;
},
This way you have the sys_ids ready to use for creating the approval request with all committee members!RetryClaude can make mistakes. Please double-check responses.ResearchSignature Opus 4.1Project contentSignatureCreated by youjacoblee4/custom_widgetmainGITHUBContentjacoblee4/custom_widgetmainGITHUBjacoblee4/custom_widgetmainGITHUBjacoblee4/custom_widgetmainGITHUB
