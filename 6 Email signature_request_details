(function runMailScript(current, template, email, email_action, event) {
    
    var documentRecord, parent, childRecord = null;
    
    // Determine context: approval notification (current = sysapproval_approver) or child state change (current = child record)
    if (current.getTableName() == 'sysapproval_approver') {
        // This is an approval/rejection email - current is sysapproval_approver
        documentRecord = current.document_id.getRefRecord();
        
        // Validation check for document record
        if (!documentRecord || !documentRecord.isValidRecord()) {
            gs.error('Email Script Error: Unable to retrieve document record from sysapproval_approver');
            return;
        }
        
        // Determine if the document is a parent or child record and get parent reference
        var documentTableName = documentRecord.getTableName();
        
        if (documentTableName == 'x_banun_bunow_si_0_credit_authority_limits' || 
            documentTableName == 'x_banun_bunow_si_0_non_credit_authority_limits') {
            // Document is a child record - get parent from the parent field
            childRecord = documentRecord;
            parent = documentRecord.parent.getRefRecord();
        } else {
            // Document is the parent record itself
            parent = documentRecord;
        }
    } else {
        // This is a child state change notification (e.g., rejection from state change) - current is the child record
        childRecord = current;
        
        // Validation check for child record
        if (!childRecord || !childRecord.isValidRecord()) {
            gs.error('Email Script Error: Unable to retrieve child record');
            return;
        }
        
        // Get the parent record
        parent = childRecord.parent.getRefRecord();
    }
    
    // Validation check for parent
    if (!parent || !parent.isValidRecord()) {
        gs.error('Email Script Error: Unable to retrieve parent Signature Authority Request record');
        return;
    }
    
    // Determine limit type if we have a child record
    var limitType = '';
    if (childRecord) {
        var childTableName = childRecord.getTableName();
        if (childTableName == 'x_banun_bunow_si_0_credit_authority_limits') {
            limitType = 'Credit Authority Limits';
        } else if (childTableName == 'x_banun_bunow_si_0_non_credit_authority_limits') {
            limitType = 'Non-Credit Authority Limits';
        }
    }
    
    var content = '';
    var instanceURL = gs.getProperty('glide.servlet.uri');
    var parentSysId = parent.sys_id.toString();
    var recordURL = instanceURL + 'x/banun/signature-authority-workspace/record/x_banun_bunow_si_0_signature_request/' + parentSysId;
    
    content += '<div style="font-family: Arial, sans-serif; color: #000000; max-width: 800px;">';
    
    // Rejection Details Section
    content += '<div style="background-color: #fff3cd; padding: 15px; margin: 20px 0; border-left: 4px solid #ffc107;">';
    content += '<h3 style="color: #856404; margin: 0 0 15px 0; padding-bottom: 10px; border-bottom: 2px solid #ffc107;">Rejection Details</h3>';
    
    var hasRejections = false;
    
    // Check for rejections on the CHILD record first (if applicable)
    if (childRecord) {
        var childApprovalGr = new GlideRecord('sysapproval_approver');
        childApprovalGr.addQuery('sysapproval', childRecord.sys_id);
        childApprovalGr.addQuery('state', 'rejected');
        childApprovalGr.orderBy('sys_updated_on');
        childApprovalGr.query();
        
        if (childApprovalGr.hasNext()) {
            hasRejections = true;
            content += '<div style="margin-bottom: 20px;">';
            content += '<h4 style="color: #856404; margin: 0 0 10px 0; font-size: 14px;">Rejected at ' + limitType + ' Level:</h4>';
            content += '<table style="width: 100%; border-collapse: collapse;">';
            
            while (childApprovalGr.next()) {
                var rejector = childApprovalGr.approver.getDisplayValue();
                var rejectionDate = childApprovalGr.sys_updated_on.getDisplayValue();
                var approverSysId = childApprovalGr.sys_id.toString();
                
                content += '<tr>';
                content += '<td style="padding: 12px; vertical-align: top; border-bottom: 1px solid #e0e0e0;">';
                content += '<div style="font-weight: bold; color: #000000; margin-bottom: 5px;">Rejected by: ' + rejector + '</div>';
                content += '<div style="color: #6c757d; font-size: 12px; margin-bottom: 8px;">' + rejectionDate + '</div>';
                
                // Get comments from journal entries (activity feed)
                var journalGr = new GlideRecord('sys_journal_field');
                journalGr.addQuery('element_id', approverSysId);
                journalGr.addQuery('element', 'comments');
                journalGr.orderByDesc('sys_created_on');
                journalGr.setLimit(1);
                journalGr.query();
                
                var comments = '';
                if (journalGr.next()) {
                    comments = journalGr.getValue('value') || '';
                }
                
                if (comments && comments.trim() !== '') {
                    content += '<div style="background-color: #ffffff; padding: 10px; border-radius: 4px; border: 1px solid #dee2e6;">';
                    content += '<div style="font-weight: bold; color: #495057; font-size: 12px; margin-bottom: 5px;">Comments:</div>';
                    content += '<div style="color: #000000; line-height: 1.5;">' + comments.replace(/\n/g, '<br/>') + '</div>';
                    content += '</div>';
                } else {
                    content += '<div style="color: #6c757d; font-style: italic;">No comments provided</div>';
                }
                
                content += '</td>';
                content += '</tr>';
            }
            
            content += '</table>';
            content += '</div>';
        }
    }
    
    // Check for rejections on the PARENT record
    var parentApprovalGr = new GlideRecord('sysapproval_approver');
    parentApprovalGr.addQuery('sysapproval', parent.sys_id);
    parentApprovalGr.addQuery('state', 'rejected');
    parentApprovalGr.orderBy('sys_updated_on');
    parentApprovalGr.query();
    
    var parentHasRejections = parentApprovalGr.hasNext();
    
    if (parentHasRejections) {
        hasRejections = true;
        
        // Reset the query to iterate
        parentApprovalGr = new GlideRecord('sysapproval_approver');
        parentApprovalGr.addQuery('sysapproval', parent.sys_id);
        parentApprovalGr.addQuery('state', 'rejected');
        parentApprovalGr.orderBy('sys_updated_on');
        parentApprovalGr.query();
        
        // Add separator if we showed child rejections
        if (childRecord && hasRejections) {
            content += '<div style="border-top: 2px solid #ffc107; margin: 15px 0;"></div>';
        }
        
        content += '<div style="margin-bottom: 20px;">';
        content += '<h4 style="color: #856404; margin: 0 0 10px 0; font-size: 14px;">Rejected at Parent Request Level:</h4>';
        content += '<table style="width: 100%; border-collapse: collapse;">';
        
        while (parentApprovalGr.next()) {
            var rejector = parentApprovalGr.approver.getDisplayValue();
            var rejectionDate = parentApprovalGr.sys_updated_on.getDisplayValue();
            var approverSysId = parentApprovalGr.sys_id.toString();
            
            content += '<tr>';
            content += '<td style="padding: 12px; vertical-align: top; border-bottom: 1px solid #e0e0e0;">';
            content += '<div style="font-weight: bold; color: #000000; margin-bottom: 5px;">Rejected by: ' + rejector + '</div>';
            content += '<div style="color: #6c757d; font-size: 12px; margin-bottom: 8px;">' + rejectionDate + '</div>';
            
            // Get comments from journal entries (activity feed)
            var journalGr = new GlideRecord('sys_journal_field');
            journalGr.addQuery('element_id', approverSysId);
            journalGr.addQuery('element', 'comments');
            journalGr.orderByDesc('sys_created_on');
            journalGr.setLimit(1);
            journalGr.query();
            
            var comments = '';
            if (journalGr.next()) {
                comments = journalGr.getValue('value') || '';
            }
            
            if (comments && comments.trim() !== '') {
                content += '<div style="background-color: #ffffff; padding: 10px; border-radius: 4px; border: 1px solid #dee2e6;">';
                content += '<div style="font-weight: bold; color: #495057; font-size: 12px; margin-bottom: 5px;">Comments:</div>';
                content += '<div style="color: #000000; line-height: 1.5;">' + comments.replace(/\n/g, '<br/>') + '</div>';
                content += '</div>';
            } else {
                content += '<div style="color: #6c757d; font-style: italic;">No comments provided</div>';
            }
            
            content += '</td>';
            content += '</tr>';
        }
        
        content += '</table>';
        content += '</div>';
    }
    
    // If no rejections found anywhere (shouldn't happen, but just in case)
    if (!hasRejections) {
        content += '<p style="color: #856404; font-style: italic;">No rejection details available. The request was closed incomplete without specific rejection comments.</p>';
    }
    
    content += '</div>';
    
    // Footer with link
    content += '<div style="margin: 20px 0; padding: 15px; background-color: #f8f9fa; border-radius: 4px; text-align: center;">';
    content += '<a href="' + recordURL + '" style="display: inline-block; padding: 12px 30px; background-color: #00aae3; color: #ffffff; text-decoration: none; border-radius: 5px; font-weight: 600;">View Request Details</a>';
    content += '</div>';
    
    content += '</div>';
    
    template.print(content);
    
})(current, template, email, email_action, event);
